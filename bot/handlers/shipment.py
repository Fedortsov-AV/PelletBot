from aiogram import types, F
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy.ext.asyncio import AsyncSession

from bot.fsm.shipment import ShipmentState
from aiogram import Router
from bot.services.shipment import save_shipment, update_stock_after_shipment  # –°–µ—Ä–≤–∏—Å—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
from bot.services.storage import get_raw_material_storage

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Router
router = Router()

# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –º–µ–Ω—é –æ—Ç–≥—Ä—É–∑–∫–∏ —Å –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞–º–∏
@router.message(F.text == "üöö –û—Ç–≥—Ä—É–∑–∫–∞")
async def show_shipment_menu(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –æ—Ç–≥—Ä—É–∑–∫–∏ —Å —ç–º–æ–¥–∑–∏ –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –≤ –∫–Ω–æ–ø–∫–∞—Ö"""

    # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —ç–º–æ–¥–∑–∏ –≤ –∫–Ω–æ–ø–∫–∞—Ö
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üì¶ –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–≥—Ä—É–∑–∫—É", callback_data="add_shipment"),
            InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é", callback_data="close_shipment_menu")
        ]
    ])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)
# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –æ—Ç–≥—Ä—É–∑–∫—É"
@router.callback_query(F.data == "add_shipment")
async def add_shipment_step1(callback_query: types.CallbackQuery, state: FSMContext):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –ø–∞—á–µ–∫ –ø–æ 3 –∫–≥"""
    await callback_query.answer()  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∫—Ä—É—Ç—è—â–∏–π—Å—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    await callback_query.message.answer("–°–∫–æ–ª—å–∫–æ –ø–∞—á–µ–∫ –ø–æ 3 –∫–≥ –±—ã–ª–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–æ?")
    await state.set_state(ShipmentState.waiting_for_small_packs)


# @router.callback_query(Text("add_shipment"))
# async def add_shipment(call: types.CallbackQuery, state: FSMContext):
#     """–ó–∞–ø—Ä–æ—Å–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—á–µ–∫ –ø–æ 3 –∫–≥"""
#     await call.message.answer("–°–∫–æ–ª—å–∫–æ –ø–∞—á–µ–∫ –ø–æ 3 –∫–≥ –±—ã–ª–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–æ?")
#     await state.set_state(ShipmentState.waiting_for_small_packs)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è


@router.message(ShipmentState.waiting_for_small_packs)
async def get_small_packs(message: types.Message, state: FSMContext):
    """–ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—á–µ–∫ 3 –∫–≥"""
    try:
        small_packs = int(message.text)
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏.")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(small_packs=small_packs)

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—á–µ–∫ –ø–æ 5 –∫–≥
    await message.answer("–°–∫–æ–ª—å–∫–æ –ø–∞—á–µ–∫ –ø–æ 5 –∫–≥ –±—ã–ª–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–æ?")
    await state.set_state(ShipmentState.waiting_for_large_packs)  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ


@router.message(ShipmentState.waiting_for_large_packs)
async def get_large_packs(message: types.Message, state: FSMContext, session: AsyncSession):
    """–ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—á–µ–∫ 5 –∫–≥"""
    try:
        large_packs = int(message.text)
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏.")
        return

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    user_data = await state.get_data()
    small_packs = user_data.get("small_packs")

    await save_shipment(user_id=message.from_user.id, small_packs=small_packs, large_packs=large_packs, session=session)

    # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ
    await update_stock_after_shipment(small_packs=small_packs, large_packs=large_packs, session=session)

    # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    await message.answer(f"–û—Ç–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {small_packs} –ø–∞—á–µ–∫ –ø–æ 3 –∫–≥ –∏ {large_packs} –ø–∞—á–µ–∫ –ø–æ 5 –∫–≥.")

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é"
@router.callback_query(F.data == "close_shipment_menu")
async def close_shipment_menu(callback_query: types.CallbackQuery):
    """–ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –æ—Ç–≥—Ä—É–∑–∫–∏"""
    await callback_query.message.delete()
    await callback_query.answer()
