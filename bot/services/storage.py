from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select
from bot.models import Storage

# üè≠ –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å–∫–ª–∞–¥ (–µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—Ç—å)
async def get_stock(session: AsyncSession):
    result = await session.execute(select(Storage).limit(1))
    stock = result.scalar_one_or_none()

    if not stock:
        stock = Storage()  # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
        session.add(stock)
        await session.commit()
        await session.refresh(stock)  # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –ø–æ—Å–ª–µ –∫–æ–º–º–∏—Ç–∞

    return stock

# ‚ûï –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏—Ö–æ–¥ –ø–µ–ª–ª–µ—Ç (–∞—Ç–æ–º–∞—Ä–Ω–æ)
async def update_stock_arrival(session: AsyncSession, amount: int):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ –ø–æ—Å–ª–µ –ø—Ä–∏—Ö–æ–¥–∞."""
    storage = await session.get(Storage, 1)

    if not storage:
        storage = Storage(pellets_6mm=amount)  # –°–æ–∑–¥–∞—ë–º —Å–∫–ª–∞–¥, –µ—Å–ª–∏ –µ–≥–æ –µ—â—ë –Ω–µ—Ç
        session.add(storage)
    else:
        storage.pellets_6mm += amount  # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ

# ‚ûñ –û–±–Ω–æ–≤–∏—Ç—å –ø–æ—Å–ª–µ —Ñ–∞—Å–æ–≤–∫–∏ (–∞—Ç–æ–º–∞—Ä–Ω–æ)
async def update_stock_packaging(session: AsyncSession, used_pellets: int, small_packs: int, large_packs: int):
     # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –∞—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç—å
    stock = await get_stock(session)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –ø–µ–ª–ª–µ—Ç –ø–µ—Ä–µ–¥ —Ñ–∞—Å–æ–≤–∫–æ–π
    if stock.pellets_6mm < used_pellets:
        raise ValueError("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–µ–ª–ª–µ—Ç –Ω–∞ —Å–∫–ª–∞–¥–µ!")

    stock.pellets_6mm -= used_pellets
    stock.packs_3kg += small_packs
    stock.packs_5kg += large_packs

    await session.commit()